name: Deployment to AWS ECS

on:
  push:
    branches:
      - pipeline
#    paths:
#      - 'backend/**'

jobs:
  deploy:
    name: Build, Push and Deploy to ECS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Log in to ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Build Docker image
        run: |
          docker build -t ${{ vars.ECR_REPOSITORY_NAME }}:$GITHUB_SHA ./backend
          docker tag ${{ vars.ECR_REPOSITORY_NAME }}:$GITHUB_SHA ${{ vars.ECR_REPOSITORY_URI }}:$GITHUB_SHA

      - name: Push Docker image to ECR
        run: |
          docker push ${{ vars.ECR_REPOSITORY_URI }}:$GITHUB_SHA

      - name: Deploy to ECS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}
        run: |
          TASK_DEFINITION=$(aws ecs describe-task-definition \
            --task-definition ${{ vars.ECS_TASK_DEFINITION_NAME }} \
            --region ${{ vars.AWS_REGION }})

          NEW_TASK_DEFINITION=$(echo "$TASK_DEFINITION" | jq \
            --arg IMAGE "${{ vars.ECR_REPOSITORY_URI }}:${{ github.sha }}" \
            '.taskDefinition | .containerDefinitions[0].image=$IMAGE | \
            del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)')

          NEW_TASK_INFO=$(aws ecs register-task-definition --region ${{ vars.AWS_REGION }} \
            --cli-input-json "$NEW_TASK_DEFINITION")
          
          NEW_REVISION=$(echo $NEW_TASK_INFO | jq '.taskDefinition.revision')
          
          aws ecs update-service \
            --cluster ${{ vars.ECS_CLUSTER_NAME }} \
            --service ${{ vars.ECS_SERVICE_NAME }} \
            --task-definition ${{ vars.ECS_TASK_DEFINITION_NAME }}:${NEW_REVISION} \
            --region ${{ vars.AWS_REGION }} \
            --force-new-deployment

#      - name: Deploy to ECS
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          AWS_REGION: ${{ vars.AWS_REGION }}
#        run: |
#          aws ecs update-service \
#            --cluster ${{ vars.ECS_CLUSTER_NAME }} \
#            --service ${{ vars.ECS_SERVICE_NAME }} \
#            --force-new-deployment \
#            --region ${{ vars.AWS_REGION }}
